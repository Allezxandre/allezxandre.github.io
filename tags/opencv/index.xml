<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>opencv on Alexandre Jouandin</title>
    <link>/tags/opencv/</link>
    <description>Recent content in opencv on Alexandre Jouandin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019 Alexandre Jouandin</copyright>
    <lastBuildDate>Fri, 04 May 2018 19:48:28 -0500</lastBuildDate>
    
	<atom:link href="/tags/opencv/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shrimp in Petri Dishes</title>
      <link>/project/shrimp-in-petri-dishes/</link>
      <pubDate>Fri, 04 May 2018 19:48:28 -0500</pubDate>
      
      <guid>/project/shrimp-in-petri-dishes/</guid>
      <description>In collaboration with faculty at UniversiteÃÅ de Lorraine, this project focused on the visual tracking of freshwater shrimp (Gammarus) in Petri dishes and used indicators about their movement to quantify the water quality (roughly, the more polluted the water, the less the shrimps will move).
    Sample output of the resulting algorithm   The goal of the project was the implementation of individual shrimp tracking using image processing with minimal user involvement.</description>
    </item>
    
    <item>
      <title>Turtlebot</title>
      <link>/project/turtlebot/</link>
      <pubDate>Fri, 04 May 2018 19:48:28 -0500</pubDate>
      
      <guid>/project/turtlebot/</guid>
      <description>This project was done in pairs in the context of a class of Autonomous Robotics. We built SLAM-aided task planning software for ROS. The software was written in a mix of C++ and Python and ran on Kinect-enabled Turtlebots. We implemented:
 Object detection from laser data Object collision avoidance Face tracking Infrared-aided auto-docking Landmark recognition Visual localization WiFi signal localization Mapping Occupancy mapping Task planning  At the end of the project, the robot was able to carry-out a list of predefined tasks, namely undocking from its base, scouting around a building, mapping Wi-Fi hotspot locations, coming back to its starting point, and autodocking.</description>
    </item>
    
  </channel>
</rss>