<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reverse-engineering on Alexandre Jouandin</title>
    <link>/tags/reverse-engineering/</link>
    <description>Recent content in reverse-engineering on Alexandre Jouandin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019 Alexandre Jouandin</copyright>
    <lastBuildDate>Tue, 15 Jan 2019 12:07:06 -0500</lastBuildDate>
    
	<atom:link href="/tags/reverse-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TikTok Police</title>
      <link>/project/tiktok-police/</link>
      <pubDate>Tue, 15 Jan 2019 12:07:06 -0500</pubDate>
      
      <guid>/project/tiktok-police/</guid>
      <description>After my work on fraud detection at Karos, I was interested to see if I could identify harassers on TikTok, the popular video app. With TikTok being this popular among teenagers, and with so little control over privacy settings, I felt this was a serious matter TikTok would need to tackle at one point.
This project is still a work in progress, but already gave right to many interesting developments that involved many of my skills: the creation of the dataset alone led to the use of many reverse-engineering techniques, from SSL API man-in-the-middling to app reverse-engineering through de-compilation.</description>
    </item>
    
    <item>
      <title>iOS Garage Door Opener</title>
      <link>/project/ios-garage-door-opener/</link>
      <pubDate>Tue, 14 Feb 2017 17:35:46 -0500</pubDate>
      
      <guid>/project/ios-garage-door-opener/</guid>
      <description>This project was done in freelance for a French start-up that takes an attempt at popularizing private parking space sharing. The goal was to build an iOS app that connects via Bluetooth-LE to a Raspberry-Pi with a sub-1 GHz transceiver dongle. Through the Raspberry Pi acting as a Bluetooth-LE interface to the dongle, the iOS App could listen, record, and transmit garage door opener signals.
The Raspberry-Pi software implementation was done in Golang, as it allows cross-compilation of a single binary containing all required libraries, and allowed the code to be both portable and optimized.</description>
    </item>
    
  </channel>
</rss>