<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raspberry-pi | Alexandre Jouandin</title>
    <link>/tags/raspberry-pi/</link>
      <atom:link href="/tags/raspberry-pi/index.xml" rel="self" type="application/rss+xml" />
    <description>raspberry-pi</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2019 Alexandre Jouandin</copyright><lastBuildDate>Tue, 14 Feb 2017 17:35:46 -0500</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>raspberry-pi</title>
      <link>/tags/raspberry-pi/</link>
    </image>
    
    <item>
      <title>iOS Garage Door Opener</title>
      <link>/project/ios-garage-door-opener/</link>
      <pubDate>Tue, 14 Feb 2017 17:35:46 -0500</pubDate>
      <guid>/project/ios-garage-door-opener/</guid>
      <description>&lt;p&gt;This project was done in freelance for a French start-up that takes an attempt at popularizing private parking space sharing. The goal was to build an iOS app that connects via Bluetooth-LE to a Raspberry-Pi with a &lt;a href=&#34;https://greatscottgadgets.com/yardstickone/&#34;&gt;sub-1 GHz transceiver dongle&lt;/a&gt;. Through the Raspberry Pi acting as a Bluetooth-LE interface to the dongle, the iOS App could listen, record, and transmit garage door opener signals.&lt;/p&gt;
&lt;p&gt;The Raspberry-Pi software implementation was done in Golang, as it allows cross-compilation of a single binary containing all required libraries, and allowed the code to be both portable and optimized. The communication between the iOS device and the Raspberry-Pi was handled using GATT from the Bluetooth-LE protocol. The dongle was later replaced by lower-level transceivers that were operated through the Raspberry-Pi&#39;s GPIO ports.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
